name: Build and Test STD

on:
  push:

jobs:
  ##########################################################################
  ##########################################################################
  # TODO split test and lint; but that REQUIRE caching else recompile from scratch in between
  rust:
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # This is pretty dumb: we MUST call action/checkout BEFORE using a local action...
      # else: Error: Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under '/home/runner/work/rs-common/rs-common/.github/actions/setup'. Did you forget to run actions/checkout before running your local action?
      - uses: Interstellar-Network/gh-actions/prepare@v3-dev
        with:
          ssh_key_input: ${{ secrets.SSH_KEY_MACHINE_USER_INTERSTELLAR_CI }}
          install_cmake_and_ninja: false

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/prepare_rust@v3-dev
        with:
          toolchain_components: "rustfmt,clippy"

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/install-protoc@v3-dev

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/install-go-ipfs@v3-dev

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/rust-build-and-test@v3-dev
        with:
          check_args: --features=with_sp_offchain,with_http_req_std
          test_args: --features=with_sp_offchain,with_http_req_std

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/rust-lint@v3-dev
        with:
          clippy_args: --features=with_sp_offchain,with_http_req_std -- -D warnings

      ##########################################################################

      # TODO move into separate action? ideally into a JS action "post" that setup ccache?
      # NOTE: remove if using "rust-build-and-test"
      - name: Print ccache/sccache stats
        # display stats even if tests failed
        if: always()
        run: |
          ccache --show-stats || true
          sccache --show-stats || true
        shell: bash

  ##########################################################################
  ##########################################################################
  sgx:
    runs-on: ubuntu-latest
    steps:
      ##########################################################################
      # This is pretty dumb: we MUST call action/checkout BEFORE using a local action...
      # else: Error: Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under '/home/runner/work/rs-common/rs-common/.github/actions/setup'. Did you forget to run actions/checkout before running your local action?
      - uses: Interstellar-Network/gh-actions/prepare@v3-dev
        with:
          ssh_key_input: ${{ secrets.SSH_KEY_MACHINE_USER_INTERSTELLAR_CI }}
          install_cmake_and_ninja: false

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/prepare_rust@v3-dev
        with:
          use_toolchain_toml: "true"
          toolchain_toml_path: ./tests_sgx/samplecode/project_template/enclave/rust-toolchain.toml
          toolchain_components: ""

      - uses: Interstellar-Network/gh-actions/install-protoc@v3-dev

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/install-sgx-sdk@v3-dev

      # https://hub.docker.com/r/hashicorp/http-echo/
      # NOTE: apparently there is no way to pass "run" arguments to a container
      # using "service"; so we start it manually
      - name: Start HTTP echo server
        # TODO remove ccache --clear; only here to debug
        run: |
          podman run -d -p 8080:8080 hashicorp/http-echo -listen=:8080 -text="hello world"
        shell: bash

      # cf core-primitives/enclave-api/build.rs and service/build.rs
      - name: Build SGX samplecode
        # TODO remove ccache --clear; only here to debug
        run: |
          curl $HTTP_ECHO_URL -v
          echo http echo OK: $?

          cd tests_sgx
          export CUSTOM_EDL_PATH=$PWD/edl
          export CUSTOM_COMMON_PATH=$PWD/common
          (cd samplecode/project_template && make clean && make && cd bin/ && ./app)
        env:
          HTTP_ECHO_URL: "http://localhost:8080/"
        shell: bash
